#!/usr/bin/env ruby

require_relative '../lib/sony-ci-api/sony_ci_admin'

args = begin
  Hash[ARGV.slice_before { |a| a.match(/^--/) }.to_a.map { |a| [a[0].gsub(/^--/, ''), a[1..-1]] }]
rescue
  {}
end

ci = SonyCiAdmin.new(
  # verbose: true,
  credentials_path: 'ci.yml')

begin
  case args.keys.sort

  when ['log', 'up']
    fail ArgumentError.new if args['log'].empty? || args['up'].empty?
    args['up'].each { |path| ci.upload(path, args['log'].first) }

  when ['down']
    fail ArgumentError.new if args['down'].empty?
    args['down'].each { |id| puts ci.download(id) }

  when ['list']
    fail ArgumentError.new unless args['list'].empty?
    ci.each { |asset| puts "#{asset['name']}\t#{asset['id']}" }

  when ['recheck']
    fail ArgumentError.new if args['recheck'].empty?
    args['recheck'].each do |file|
      File.foreach(file) do |line|
        line.chomp!
        id = line.split("\t")[2]
        detail = ci.detail(id).to_s.gsub("\n", ' ')
        puts line + "\t" + detail
      end
    end

  else
    fail ArgumentError.new
  end
rescue ArgumentError
  abort 'Usage: --up GLOB --log LOG_FILE | --down ID | --list | --recheck LOG_FILE'
end
